# Generated by Django 3.1.7 on 2021-03-16 14:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Active',
            fields=[
                ('activeid', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('typeid0', models.IntegerField()),
                ('typeid1', models.IntegerField()),
                ('typeid2', models.IntegerField()),
                ('typeid3', models.IntegerField()),
                ('typeid4', models.IntegerField()),
                ('typeid5', models.IntegerField()),
                ('typeid6', models.IntegerField()),
                ('typeid7', models.IntegerField()),
                ('typeid8', models.IntegerField()),
                ('typeid9', models.IntegerField()),
                ('people_limit', models.IntegerField()),
                ('reset', models.IntegerField()),
                ('levelup', models.IntegerField()),
                ('status', models.IntegerField()),
                ('showtime', models.DateTimeField()),
                ('noshowtime', models.DateTimeField()),
                ('starttime', models.DateTimeField()),
                ('endtime', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'active',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActiveLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('activeid', models.IntegerField()),
                ('reset', models.IntegerField()),
                ('levelup', models.IntegerField()),
                ('unit', models.IntegerField()),
                ('amount', models.FloatField()),
                ('note', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'active_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActiveRule',
            fields=[
                ('typeid', models.AutoField(primary_key=True, serialize=False)),
                ('typename', models.CharField(max_length=20)),
                ('sclass0', models.IntegerField()),
                ('sclass1', models.IntegerField()),
                ('sclass2', models.IntegerField()),
                ('enough0', models.FloatField()),
                ('enough1', models.FloatField()),
                ('enough2', models.FloatField()),
                ('reset', models.IntegerField()),
                ('levelup', models.IntegerField()),
                ('giveclass', models.IntegerField()),
                ('unit', models.IntegerField()),
                ('amount0', models.FloatField()),
                ('amount1', models.FloatField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'active_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActiveTimes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('dates', models.DateField()),
                ('pay', models.IntegerField()),
                ('bet', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'active_times',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActiveUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('activeid', models.IntegerField()),
                ('times', models.IntegerField()),
                ('standard', models.CharField(max_length=20)),
                ('give', models.CharField(max_length=20)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'active_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=1)),
                ('title', models.CharField(max_length=50)),
                ('reward_type', models.CharField(max_length=255)),
                ('activity_reward_id', models.CharField(blank=True, max_length=255, null=True)),
                ('picture', models.CharField(blank=True, max_length=255, null=True)),
                ('show_time', models.DateTimeField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('content', models.TextField(blank=True, null=True)),
                ('show_at_index', models.CharField(max_length=255)),
                ('show_at_bulletin', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityReward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnd', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=1)),
                ('target', models.CharField(max_length=1)),
                ('rewardtype', models.IntegerField(blank=True, null=True)),
                ('num_01', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_02', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_03', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_04', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_05', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_06', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_07', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_08', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_09', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_10', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_11', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_12', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_13', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_14', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_15', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_16', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_17', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_18', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_19', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('num_20', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_01', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_02', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_03', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_04', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_05', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_06', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_07', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_08', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_09', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_10', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_11', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_12', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_13', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_14', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_15', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_16', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_17', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_18', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_19', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rewardnum_20', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'activity_reward',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityRewardCnd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=1)),
                ('fullname', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'activity_reward_cnd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityRewardLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('user_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('activity_id', models.IntegerField(blank=True, null=True)),
                ('reward_id', models.IntegerField(blank=True, null=True)),
                ('num_before', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('num_def', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('num_after', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('reward_give', models.CharField(max_length=1)),
                ('reward_type', models.CharField(blank=True, max_length=1, null=True)),
                ('reward_num', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('reward_prize', models.CharField(max_length=1)),
                ('reward_target', models.CharField(max_length=1)),
                ('auto_prize', models.CharField(max_length=1)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'activity_reward_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityRewardRnd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rand_num', models.IntegerField(blank=True, null=True)),
                ('rand_01', models.IntegerField(blank=True, null=True)),
                ('rand_02', models.IntegerField(blank=True, null=True)),
                ('rand_03', models.IntegerField(blank=True, null=True)),
                ('rand_04', models.IntegerField(blank=True, null=True)),
                ('rand_05', models.IntegerField(blank=True, null=True)),
                ('rand_06', models.IntegerField(blank=True, null=True)),
                ('rand_07', models.IntegerField(blank=True, null=True)),
                ('rand_08', models.IntegerField(blank=True, null=True)),
                ('rand_09', models.IntegerField(blank=True, null=True)),
                ('rand_10', models.IntegerField(blank=True, null=True)),
                ('rand_11', models.IntegerField(blank=True, null=True)),
                ('rand_12', models.IntegerField(blank=True, null=True)),
                ('rand_13', models.IntegerField(blank=True, null=True)),
                ('rand_14', models.IntegerField(blank=True, null=True)),
                ('rand_15', models.IntegerField(blank=True, null=True)),
                ('rand_16', models.IntegerField(blank=True, null=True)),
                ('rand_17', models.IntegerField(blank=True, null=True)),
                ('rand_18', models.IntegerField(blank=True, null=True)),
                ('rand_19', models.IntegerField(blank=True, null=True)),
                ('rand_20', models.IntegerField(blank=True, null=True)),
                ('rand_21', models.IntegerField(blank=True, null=True)),
                ('rand_22', models.IntegerField(blank=True, null=True)),
                ('rand_23', models.IntegerField(blank=True, null=True)),
                ('rand_24', models.IntegerField(blank=True, null=True)),
                ('rand_25', models.IntegerField(blank=True, null=True)),
                ('rtype_01', models.CharField(max_length=1)),
                ('rtype_02', models.CharField(max_length=1)),
                ('rtype_03', models.CharField(max_length=1)),
                ('rtype_04', models.CharField(max_length=1)),
                ('rtype_05', models.CharField(max_length=1)),
                ('rtype_06', models.CharField(max_length=1)),
                ('rtype_07', models.CharField(max_length=1)),
                ('rtype_08', models.CharField(max_length=1)),
                ('rtype_09', models.CharField(max_length=1)),
                ('rtype_10', models.CharField(max_length=1)),
                ('rtype_11', models.CharField(max_length=1)),
                ('rtype_12', models.CharField(max_length=1)),
                ('rtype_13', models.CharField(max_length=1)),
                ('rtype_14', models.CharField(max_length=1)),
                ('rtype_15', models.CharField(max_length=1)),
                ('rtype_16', models.CharField(max_length=1)),
                ('rtype_17', models.CharField(max_length=1)),
                ('rtype_18', models.CharField(max_length=1)),
                ('rtype_19', models.CharField(max_length=1)),
                ('rtype_20', models.CharField(max_length=1)),
                ('rtype_21', models.CharField(max_length=1)),
                ('rtype_22', models.CharField(max_length=1)),
                ('rtype_23', models.CharField(max_length=1)),
                ('rtype_24', models.CharField(max_length=1)),
                ('rtype_25', models.CharField(max_length=1)),
                ('rnum_01', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_02', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_03', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_04', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_05', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_06', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_07', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_08', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_09', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_10', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_11', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_12', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_13', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_14', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_15', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_16', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_17', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_18', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_19', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_20', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_21', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_22', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_23', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_24', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('rnum_25', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'activity_reward_rnd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdminSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=45, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=45, null=True)),
                ('content', models.CharField(blank=True, db_column='Content', max_length=45, null=True)),
                ('type', models.CharField(db_column='Type', max_length=45)),
            ],
            options={
                'db_table': 'admin_system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BankBack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('back_money2', models.CharField(blank=True, max_length=20, null=True)),
                ('b_befor', models.CharField(blank=True, max_length=20, null=True)),
                ('b_after', models.CharField(blank=True, max_length=20, null=True)),
                ('addtime', models.DateTimeField(blank=True, null=True)),
                ('lotteryid', models.IntegerField(blank=True, null=True)),
                ('follows', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bank_back',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_type_id', models.IntegerField(blank=True, null=True)),
                ('order_id', models.IntegerField()),
                ('staytime', models.SmallIntegerField(blank=True, null=True)),
                ('picture', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=120, null=True)),
                ('href', models.CharField(blank=True, max_length=120, null=True)),
                ('target', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'banner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BannerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(blank=True, max_length=120, null=True)),
                ('picwidth', models.SmallIntegerField(blank=True, null=True)),
                ('picheight', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'banner_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BetResult',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('game_kinds_id', models.IntegerField()),
                ('game_kinds_skey', models.CharField(max_length=50)),
                ('bet_id', models.CharField(blank=True, max_length=100, null=True)),
                ('bet_gameid', models.CharField(blank=True, max_length=100, null=True)),
                ('bet_gamename', models.CharField(blank=True, max_length=100, null=True)),
                ('bet_round', models.CharField(blank=True, max_length=20, null=True)),
                ('bet_userid', models.CharField(blank=True, max_length=20, null=True)),
                ('bet_username', models.CharField(blank=True, max_length=20, null=True)),
                ('trans_id', models.CharField(blank=True, max_length=100, null=True)),
                ('bet', models.CharField(max_length=20)),
                ('bet_available', models.CharField(max_length=20)),
                ('prize', models.CharField(max_length=20)),
                ('winlose', models.CharField(max_length=20)),
                ('jcon', models.CharField(blank=True, max_length=20, null=True)),
                ('jwin', models.CharField(blank=True, max_length=20, null=True)),
                ('selfpoint', models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True)),
                ('bet_time', models.DateTimeField(blank=True, null=True)),
                ('prize_time', models.DateTimeField(blank=True, null=True)),
                ('platform', models.CharField(blank=True, max_length=10, null=True)),
                ('beforepoints', models.FloatField(blank=True, db_column='beforePoints', null=True)),
                ('afterpoints', models.FloatField(blank=True, db_column='afterPoints', null=True)),
                ('experience', models.CharField(max_length=1)),
                ('status', models.IntegerField()),
                ('log', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bet_result',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlockString',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('string', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'block_string',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bulletin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=120, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(max_length=1)),
                ('status_back', models.CharField(max_length=1)),
                ('loginboard', models.CharField(max_length=45)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bulletin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContactTalk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id_a', models.IntegerField()),
                ('user_id_b', models.IntegerField()),
                ('talk_idx', models.IntegerField()),
                ('content', models.CharField(max_length=200)),
                ('readcon', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'contact_talk',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CoopList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(blank=True, max_length=10, null=True)),
                ('prefix_name', models.CharField(max_length=45)),
                ('topuser', models.CharField(max_length=45)),
                ('downuser', models.CharField(max_length=45)),
                ('isproxy', models.IntegerField()),
                ('md5key', models.CharField(max_length=20)),
                ('white_ip', models.TextField()),
                ('lotto', models.IntegerField(db_column='Lotto')),
                ('live', models.IntegerField(db_column='Live')),
                ('sport', models.CharField(db_column='Sport', max_length=45)),
                ('agurl1', models.CharField(blank=True, max_length=100, null=True)),
                ('agurl2', models.CharField(blank=True, max_length=100, null=True)),
                ('site_id', models.CharField(blank=True, max_length=10, null=True)),
                ('handicaps', models.CharField(blank=True, max_length=2, null=True)),
                ('chat', models.IntegerField()),
                ('gift', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'coop_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameKinds',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('skey', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_kinds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpAllowList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isproxy', models.CharField(blank=True, max_length=10, null=True)),
                ('ipaddress', models.CharField(max_length=50)),
                ('enabled', models.CharField(max_length=1)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'ip_allow_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpBlockList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=5)),
                ('condition', models.CharField(max_length=50)),
                ('enabled', models.CharField(max_length=1)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'ip_block_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'list_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ListCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'list_city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveCamgirl',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('dept_id', models.CharField(max_length=10)),
                ('girlname', models.CharField(max_length=20)),
                ('girlname_tw', models.CharField(max_length=45)),
                ('height', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('year', models.DateField()),
                ('bwh', models.CharField(max_length=20)),
                ('icon', models.TextField()),
                ('note', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'live_camgirl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveDept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deptid', models.CharField(max_length=45)),
                ('deptname', models.CharField(max_length=20)),
                ('username', models.CharField(max_length=255)),
                ('playkey', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'live_dept',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveGiftitem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_id', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=20)),
                ('name_tw', models.CharField(max_length=20)),
                ('money', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'live_giftitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveMarquee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playkey', models.CharField(max_length=200)),
                ('text', models.CharField(max_length=200)),
                ('minute', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'live_marquee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveStream',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('url', models.CharField(max_length=45)),
                ('blade', models.CharField(blank=True, max_length=20, null=True)),
                ('pc', models.IntegerField(blank=True, null=True)),
                ('mac', models.IntegerField(blank=True, null=True)),
                ('app', models.IntegerField(blank=True, null=True)),
                ('deptarr', models.CharField(max_length=40)),
                ('sorts', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'live_stream',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bo', models.IntegerField(blank=True, null=True)),
                ('pid', models.IntegerField()),
                ('cid', models.IntegerField()),
                ('cname', models.CharField(max_length=20)),
                ('path', models.CharField(max_length=100)),
                ('auth', models.CharField(max_length=50)),
                ('state', models.IntegerField()),
                ('target', models.IntegerField()),
                ('icon', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'menu_system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageCanned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'message_canned',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Migrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('migration', models.CharField(max_length=255)),
                ('batch', models.IntegerField()),
            ],
            options={
                'db_table': 'migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OperationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'operation_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'password_resets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payrecord',
            fields=[
                ('payid', models.AutoField(db_column='payID', primary_key=True, serialize=False)),
                ('paynumid', models.CharField(db_column='payNumID', max_length=50, unique=True)),
                ('paytype', models.CharField(db_column='payType', max_length=50)),
                ('payuser', models.CharField(db_column='payUser', max_length=50)),
                ('paymoney', models.FloatField(db_column='payMoney')),
                ('paystate', models.CharField(db_column='payState', max_length=50)),
                ('userrealname', models.CharField(db_column='userRealName', max_length=50)),
                ('curmoney', models.FloatField(db_column='curMoney')),
                ('oldmoney', models.FloatField(db_column='oldMoney')),
                ('thispaystate', models.CharField(db_column='thisPayState', max_length=50)),
                ('paytime', models.DateTimeField(blank=True, db_column='payTime', null=True)),
                ('source', models.CharField(max_length=50)),
                ('createtime', models.DateTimeField(blank=True, db_column='createTime', null=True)),
            ],
            options={
                'db_table': 'payrecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PointAlter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'point_alter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PointTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'point_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PromoLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkname', models.CharField(max_length=10)),
                ('linkurl', models.CharField(max_length=100)),
                ('userid', models.IntegerField()),
                ('rebate', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('remark', models.CharField(max_length=200)),
                ('times', models.IntegerField()),
                ('status', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'promo_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rebate',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('rebate', models.FloatField()),
                ('quota', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'rebate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40)),
                ('content', models.TextField()),
                ('status', models.IntegerField()),
                ('starttime', models.DateTimeField()),
                ('endtime', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reception',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.SmallIntegerField()),
                ('sort', models.SmallIntegerField()),
                ('enable', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'rotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScoreSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField()),
                ('score', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'score_set',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SecureQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'secure_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTalkd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('mid', models.IntegerField()),
                ('talk_idx', models.IntegerField()),
                ('content', models.CharField(max_length=200)),
                ('readcon', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'service_talkd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTalkm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('kf_user_id', models.IntegerField(blank=True, null=True)),
                ('sound', models.IntegerField()),
            ],
            options={
                'db_table': 'service_talkm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('ip_address', models.CharField(max_length=45)),
                ('user_agent', models.TextField()),
                ('payload', models.TextField()),
                ('last_activity', models.IntegerField()),
            ],
            options={
                'db_table': 'session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suggest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('content', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'suggest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankcode', models.CharField(db_column='bankCode', max_length=10)),
                ('bankname', models.CharField(blank=True, max_length=255, null=True)),
                ('banktype', models.CharField(blank=True, max_length=10, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=255, null=True)),
                ('realname', models.CharField(blank=True, max_length=255, null=True)),
                ('banknum', models.CharField(max_length=255)),
                ('bankemail', models.TextField(blank=True, db_column='bankEmail', null=True)),
                ('min', models.IntegerField()),
                ('max', models.IntegerField()),
                ('inouts', models.IntegerField()),
                ('groupid', models.IntegerField(blank=True, null=True)),
                ('enabled', models.CharField(max_length=1)),
                ('enabled_phone', models.CharField(blank=True, max_length=1, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sys_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysBankGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vip', models.IntegerField()),
                ('groupname', models.CharField(max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sys_bank_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysBankList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('bankname', models.CharField(db_column='bankName', max_length=255)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('enabled', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sys_bank_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fieldname', models.CharField(max_length=20)),
                ('codeid', models.CharField(max_length=10)),
                ('codename', models.CharField(max_length=20)),
                ('codevalue', models.CharField(max_length=20)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'sys_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysDividend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('members', models.SmallIntegerField()),
                ('quantity', models.CharField(max_length=45)),
                ('percent', models.CharField(max_length=45)),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'sys_dividend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysFunds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('money', models.IntegerField()),
                ('money_r', models.IntegerField()),
                ('cate', models.CharField(blank=True, max_length=16, null=True)),
                ('bankcode', models.CharField(blank=True, db_column='bankCode', max_length=10, null=True)),
                ('bankname', models.CharField(blank=True, max_length=20, null=True)),
                ('banknum', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('bankemail', models.CharField(blank=True, max_length=255, null=True)),
                ('realname', models.CharField(blank=True, max_length=100, null=True)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('user_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('sys_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('sys_bankuername', models.CharField(blank=True, db_column='sys_bankUerName', max_length=255, null=True)),
                ('sys_banknum', models.CharField(blank=True, db_column='sys_bankNum', max_length=255, null=True)),
                ('sys_fee', models.IntegerField(blank=True, null=True)),
                ('sys_user_id', models.IntegerField(blank=True, null=True)),
                ('sys_operated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('notetime', models.DateTimeField(blank=True, null=True)),
                ('note2', models.CharField(blank=True, max_length=255, null=True)),
                ('notetime2', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('need_water', models.FloatField()),
                ('buy_water', models.FloatField()),
                ('can_with', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'sys_funds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysFunds3Rd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.CharField(max_length=255)),
                ('support', models.CharField(max_length=10)),
                ('yborderid', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('bank', models.CharField(blank=True, max_length=30, null=True)),
                ('lastno', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('log', models.TextField(blank=True, null=True)),
                ('bankdealid', models.CharField(blank=True, db_column='bankDealId', max_length=30, null=True)),
                ('dealtime', models.CharField(blank=True, db_column='dealTime', max_length=14, null=True)),
                ('payamount', models.IntegerField(blank=True, db_column='payAmount', null=True)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('payresult', models.CharField(blank=True, db_column='payResult', max_length=2, null=True)),
                ('errcode', models.CharField(blank=True, db_column='errCode', max_length=10, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sys_funds_3rd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('picwidth', models.SmallIntegerField()),
                ('picheight', models.SmallIntegerField()),
                ('note', models.CharField(max_length=255)),
                ('imgtext', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sys_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysMachine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sys_machine',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SysSalary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'sys_salary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('realname', models.CharField(blank=True, max_length=255, null=True)),
                ('nickname', models.CharField(max_length=255)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=120)),
                ('bank_pwd', models.CharField(blank=True, max_length=120, null=True)),
                ('enabled', models.IntegerField()),
                ('enabled_live', models.IntegerField()),
                ('vip_lot', models.IntegerField()),
                ('depositnum', models.IntegerField()),
                ('disabled_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('isproxy', models.IntegerField()),
                ('proxy_id', models.IntegerField(blank=True, null=True)),
                ('proxynum', models.PositiveIntegerField()),
                ('downcounts', models.PositiveIntegerField(db_column='downCounts')),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.IntegerField()),
                ('salary_set', models.CharField(max_length=20)),
                ('salary', models.CharField(max_length=1)),
                ('bet', models.CharField(max_length=1)),
                ('tr_money', models.CharField(max_length=1)),
                ('role', models.PositiveIntegerField(blank=True, null=True)),
                ('sq_id', models.IntegerField(blank=True, null=True)),
                ('sq_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('nowlogintime', models.DateTimeField(blank=True, db_column='nowLoginTime', null=True)),
                ('nowloginip', models.CharField(blank=True, db_column='nowLoginIp', max_length=255, null=True)),
                ('lastlogintime', models.DateTimeField(blank=True, db_column='lastLoginTime', null=True)),
                ('lastloginip', models.CharField(blank=True, db_column='lastLoginIp', max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('remember_token', models.CharField(blank=True, max_length=100, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('camlot_token', models.CharField(blank=True, max_length=255, null=True)),
                ('backend_token', models.CharField(blank=True, max_length=255, null=True)),
                ('experience', models.CharField(max_length=1)),
                ('keepalive_time', models.DateTimeField(blank=True, null=True)),
                ('colorflag', models.IntegerField()),
                ('iconflag', models.IntegerField()),
                ('user_url', models.CharField(blank=True, max_length=20, null=True)),
                ('recharge', models.CharField(max_length=1)),
                ('withdrawl', models.CharField(max_length=1)),
                ('verified', models.CharField(max_length=1)),
                ('miss_num', models.IntegerField()),
                ('handicaps', models.CharField(max_length=1)),
                ('currency', models.CharField(blank=True, max_length=5, null=True)),
                ('credit', models.IntegerField()),
                ('percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('rpoint', models.DecimalField(decimal_places=2, max_digits=5)),
                ('autopoint', models.IntegerField()),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAdminLoginLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('login_ip', models.CharField(max_length=255)),
                ('login_web', models.CharField(max_length=30)),
                ('agent', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_admin_login_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAdminLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('operation_type_id', models.IntegerField(blank=True, null=True)),
                ('db', models.CharField(blank=True, max_length=30, null=True)),
                ('table', models.CharField(blank=True, max_length=30, null=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('text', models.TextField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_admin_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAdminLogsLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('operation_type_id', models.IntegerField(blank=True, null=True)),
                ('db', models.CharField(blank=True, max_length=30, null=True)),
                ('table', models.CharField(blank=True, max_length=30, null=True)),
                ('type', models.CharField(blank=True, max_length=30, null=True)),
                ('text', models.TextField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('ip', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_admin_logs_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBankCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('bankcode', models.CharField(blank=True, db_column='bankCode', max_length=10, null=True)),
                ('bankname', models.CharField(blank=True, db_column='bankName', max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('bankbranch', models.CharField(blank=True, db_column='bankBranch', max_length=255, null=True)),
                ('banknum', models.CharField(db_column='bankNum', max_length=255)),
                ('bankemail', models.CharField(blank=True, db_column='bankEmail', max_length=255, null=True)),
                ('enabled', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_bank_card',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBonusLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('beforepoints', models.CharField(db_column='beforePoints', max_length=20)),
                ('income', models.CharField(max_length=20)),
                ('outlay', models.CharField(max_length=20)),
                ('afterpoints', models.CharField(db_column='afterPoints', max_length=20)),
                ('from_user_id', models.IntegerField(blank=True, null=True)),
                ('to_user_id', models.IntegerField(blank=True, null=True)),
                ('point_alter_id', models.IntegerField()),
                ('point_type_id', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_bonus_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCommissionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datestart', models.DateField(db_column='dateStart')),
                ('dateend', models.DateField(db_column='dateEnd')),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=255)),
                ('up_user_id', models.IntegerField(blank=True, null=True)),
                ('up_username', models.CharField(blank=True, max_length=255, null=True)),
                ('topcomm', models.CharField(max_length=20)),
                ('profitnloss', models.CharField(db_column='profitNLoss', max_length=20)),
                ('commission', models.CharField(max_length=20)),
                ('commission_real', models.CharField(max_length=20)),
                ('downcomm', models.CharField(blank=True, max_length=20, null=True)),
                ('receive', models.CharField(max_length=1)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
                ('exc_user_id', models.IntegerField(blank=True, null=True)),
                ('dividend', models.IntegerField(blank=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_commission_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDartLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('usefree', models.CharField(max_length=1)),
                ('money', models.SmallIntegerField()),
                ('times', models.SmallIntegerField()),
                ('amount', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_dart_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDaymaxLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=45, null=True)),
                ('nums', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_daymax_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDividend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('members', models.SmallIntegerField()),
                ('quantity', models.IntegerField()),
                ('percent', models.SmallIntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_dividend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDividendt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('level', models.IntegerField()),
                ('members', models.SmallIntegerField()),
                ('quantity', models.IntegerField()),
                ('percent', models.SmallIntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_dividendt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFunds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('money', models.IntegerField()),
                ('money_r', models.IntegerField()),
                ('cate', models.CharField(blank=True, max_length=16, null=True)),
                ('bankcode', models.CharField(blank=True, db_column='bankCode', max_length=10, null=True)),
                ('bankname', models.CharField(blank=True, max_length=20, null=True)),
                ('banknum', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('bankemail', models.CharField(blank=True, max_length=255, null=True)),
                ('realname', models.CharField(blank=True, max_length=100, null=True)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('user_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('sys_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('sys_bankuername', models.CharField(blank=True, db_column='sys_bankUerName', max_length=255, null=True)),
                ('sys_banknum', models.CharField(blank=True, db_column='sys_bankNum', max_length=255, null=True)),
                ('sys_fee', models.IntegerField(blank=True, null=True)),
                ('sys_user_id', models.IntegerField(blank=True, null=True)),
                ('sys_operated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('notetime', models.DateTimeField(blank=True, null=True)),
                ('note2', models.CharField(blank=True, max_length=255, null=True)),
                ('notetime2', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('need_water', models.FloatField()),
                ('buy_water', models.FloatField()),
                ('can_with', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'user_funds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFunds3Rd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.CharField(max_length=255)),
                ('support', models.CharField(max_length=10)),
                ('yborderid', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('bank', models.CharField(blank=True, max_length=30, null=True)),
                ('lastno', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('log', models.TextField(blank=True, null=True)),
                ('bankdealid', models.CharField(blank=True, db_column='bankDealId', max_length=30, null=True)),
                ('dealtime', models.CharField(blank=True, db_column='dealTime', max_length=14, null=True)),
                ('payamount', models.IntegerField(blank=True, db_column='payAmount', null=True)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('payresult', models.CharField(blank=True, db_column='payResult', max_length=2, null=True)),
                ('errcode', models.CharField(blank=True, db_column='errCode', max_length=10, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_funds_3rd',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFunds3RdLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.CharField(max_length=255)),
                ('support', models.CharField(max_length=10)),
                ('yborderid', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('bank', models.CharField(blank=True, max_length=30, null=True)),
                ('lastno', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('log', models.TextField(blank=True, null=True)),
                ('bankdealid', models.CharField(blank=True, db_column='bankDealId', max_length=30, null=True)),
                ('dealtime', models.CharField(blank=True, db_column='dealTime', max_length=14, null=True)),
                ('payamount', models.IntegerField(blank=True, db_column='payAmount', null=True)),
                ('fee', models.IntegerField(blank=True, null=True)),
                ('payresult', models.CharField(blank=True, db_column='payResult', max_length=2, null=True)),
                ('errcode', models.CharField(blank=True, db_column='errCode', max_length=10, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_funds_3rd_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserFundsLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('money', models.IntegerField()),
                ('money_r', models.IntegerField()),
                ('cate', models.CharField(blank=True, max_length=16, null=True)),
                ('bankcode', models.CharField(blank=True, db_column='bankCode', max_length=10, null=True)),
                ('bankname', models.CharField(blank=True, max_length=20, null=True)),
                ('banknum', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=100, null=True)),
                ('bankemail', models.CharField(blank=True, max_length=255, null=True)),
                ('realname', models.CharField(blank=True, max_length=100, null=True)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('user_ip', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('sys_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('sys_bankuername', models.CharField(blank=True, db_column='sys_bankUerName', max_length=255, null=True)),
                ('sys_banknum', models.CharField(blank=True, db_column='sys_bankNum', max_length=255, null=True)),
                ('sys_fee', models.IntegerField(blank=True, null=True)),
                ('sys_user_id', models.IntegerField(blank=True, null=True)),
                ('sys_operated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('notetime', models.DateTimeField(blank=True, null=True)),
                ('note2', models.CharField(blank=True, max_length=255, null=True)),
                ('notetime2', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('need_water', models.FloatField()),
                ('buy_water', models.FloatField()),
                ('can_with', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'user_funds_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGiftLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_id', models.CharField(max_length=10)),
                ('date', models.DateField()),
                ('playkey', models.CharField(max_length=20)),
                ('tablenum', models.CharField(max_length=20)),
                ('list_id', models.CharField(max_length=20)),
                ('dealer_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=45)),
                ('count', models.IntegerField()),
                ('money', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up6_id', models.IntegerField()),
                ('up5_id', models.IntegerField()),
                ('up4_id', models.IntegerField()),
                ('up3_id', models.IntegerField()),
                ('up2_id', models.IntegerField()),
                ('up1_id', models.IntegerField()),
                ('up0_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_gift_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGiftLot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_id', models.CharField(max_length=10)),
                ('date', models.DateField()),
                ('playkey', models.CharField(max_length=20)),
                ('list_id', models.CharField(max_length=20)),
                ('camgirl_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=45)),
                ('count', models.IntegerField()),
                ('money', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up6_id', models.IntegerField()),
                ('up5_id', models.IntegerField()),
                ('up4_id', models.IntegerField()),
                ('up3_id', models.IntegerField()),
                ('up2_id', models.IntegerField()),
                ('up1_id', models.IntegerField()),
                ('up0_id', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_gift_lot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(unique=True)),
                ('higher_id', models.IntegerField(blank=True, null=True)),
                ('vip_id', models.IntegerField()),
                ('levelname', models.CharField(max_length=20)),
                ('vip_exp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('versions', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserLocationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('location', models.IntegerField()),
                ('beforepoints', models.TextField(blank=True, db_column='beforePoints', null=True)),
                ('afterpoints', models.TextField(blank=True, db_column='afterPoints', null=True)),
                ('point_alter_id', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_location_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserLoginLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('login_ip', models.CharField(max_length=255)),
                ('agent', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_login_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('user_pwd', models.CharField(blank=True, max_length=120, null=True)),
                ('game_kinds_id', models.PositiveIntegerField()),
                ('playtimes', models.IntegerField()),
                ('last_login_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserMsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('sender_id', models.IntegerField(blank=True, null=True)),
                ('reply_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, null=True)),
                ('beenread', models.CharField(db_column='beenRead', max_length=1)),
                ('senderdelete', models.CharField(db_column='senderDelete', max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_msg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserOperationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('exe_user_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=40, null=True)),
                ('before_status', models.CharField(blank=True, max_length=10, null=True)),
                ('after_status', models.CharField(blank=True, max_length=10, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_operation_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserOperationLogLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('exe_user_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=40, null=True)),
                ('before_status', models.CharField(blank=True, max_length=10, null=True)),
                ('after_status', models.CharField(blank=True, max_length=10, null=True)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_operation_log_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('point_types_id', models.IntegerField()),
                ('points', models.FloatField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPointsDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_id', models.IntegerField()),
                ('point_types_id', models.IntegerField()),
                ('points', models.FloatField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_points_day',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPointsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('beforepoints', models.FloatField(db_column='beforePoints')),
                ('income', models.FloatField()),
                ('outlay', models.FloatField()),
                ('afterpoints', models.FloatField(db_column='afterPoints')),
                ('from_user_id', models.IntegerField(blank=True, null=True)),
                ('to_user_id', models.IntegerField(blank=True, null=True)),
                ('point_alter_id', models.IntegerField()),
                ('point_type_id', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_points_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPointsLogLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('beforepoints', models.FloatField(db_column='beforePoints')),
                ('income', models.FloatField()),
                ('outlay', models.FloatField()),
                ('afterpoints', models.FloatField(db_column='afterPoints')),
                ('from_user_id', models.IntegerField(blank=True, null=True)),
                ('to_user_id', models.IntegerField(blank=True, null=True)),
                ('point_alter_id', models.IntegerField()),
                ('point_type_id', models.IntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_points_log_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProxy',
            fields=[
                ('proxyid', models.IntegerField(primary_key=True, serialize=False)),
                ('proxyname', models.CharField(max_length=12)),
                ('proxy_rate', models.IntegerField()),
                ('opennum', models.IntegerField()),
                ('proxy_login', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_proxy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserQuotas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.PositiveIntegerField()),
                ('rebate_id', models.PositiveIntegerField()),
                ('quota', models.IntegerField()),
                ('quota_space', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_quotas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserQuotasLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_quotas_id', models.PositiveIntegerField()),
                ('after_quota_space', models.PositiveIntegerField()),
                ('user_id', models.PositiveIntegerField()),
                ('quota_space', models.PositiveIntegerField()),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_quotas_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_kind_id', models.PositiveIntegerField()),
                ('user_id', models.PositiveIntegerField()),
                ('rate', models.FloatField()),
                ('type', models.CharField(max_length=8)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_rates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRatesLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_rates_id', models.PositiveIntegerField()),
                ('rate', models.FloatField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_rates_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRatest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_kind_id', models.PositiveIntegerField()),
                ('user_id', models.PositiveIntegerField()),
                ('rate', models.FloatField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_ratest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=255)),
                ('up_user_id', models.IntegerField(blank=True, null=True)),
                ('up_username', models.CharField(blank=True, max_length=255, null=True)),
                ('game_kinds_id', models.IntegerField()),
                ('game_kinds_skey', models.CharField(max_length=50)),
                ('income', models.CharField(max_length=20)),
                ('outgo', models.CharField(max_length=20)),
                ('bet', models.CharField(max_length=20)),
                ('bet_nc', models.CharField(max_length=20)),
                ('winlose', models.CharField(max_length=20)),
                ('prize', models.CharField(max_length=20)),
                ('real_winlose', models.CharField(max_length=20)),
                ('activity_reward', models.CharField(max_length=20)),
                ('returnpoint', models.CharField(db_column='returnPoint', max_length=20)),
                ('salary', models.CharField(max_length=20)),
                ('salary_sin', models.CharField(max_length=20)),
                ('profitnloss', models.CharField(db_column='profitNLoss', max_length=20)),
                ('commission', models.CharField(max_length=20)),
                ('dividendrate', models.CharField(db_column='dividendRate', max_length=5)),
                ('count', models.IntegerField()),
                ('win', models.IntegerField()),
                ('platform', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_report',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserReportRangeSsc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateField(blank=True, db_column='startDate', null=True)),
                ('enddate', models.DateField(blank=True, db_column='endDate', null=True)),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=255)),
                ('up_user_id', models.IntegerField(blank=True, null=True)),
                ('up_username', models.CharField(blank=True, max_length=255, null=True)),
                ('income', models.CharField(max_length=20)),
                ('outgo', models.CharField(max_length=20)),
                ('bet', models.CharField(max_length=20)),
                ('winlose', models.CharField(max_length=20)),
                ('prize', models.CharField(max_length=20)),
                ('real_winlose', models.CharField(max_length=20)),
                ('activity_reward', models.CharField(max_length=20)),
                ('returnpoint', models.CharField(db_column='returnPoint', max_length=20)),
                ('salary', models.CharField(max_length=20)),
                ('profitnloss', models.CharField(db_column='profitNLoss', max_length=20)),
                ('commission', models.CharField(max_length=20)),
                ('dividendrate', models.CharField(db_column='dividendRate', max_length=5)),
                ('count', models.IntegerField()),
                ('win', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_report_range_ssc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserReportSsc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=255)),
                ('up_user_id', models.IntegerField(blank=True, null=True)),
                ('up_username', models.CharField(blank=True, max_length=255, null=True)),
                ('income', models.DecimalField(decimal_places=6, max_digits=10)),
                ('outgo', models.DecimalField(decimal_places=6, max_digits=10)),
                ('bet', models.DecimalField(decimal_places=6, max_digits=10)),
                ('betok', models.DecimalField(decimal_places=6, max_digits=10)),
                ('wait', models.DecimalField(decimal_places=6, max_digits=10)),
                ('winlose', models.DecimalField(decimal_places=6, max_digits=10)),
                ('prize', models.DecimalField(decimal_places=6, max_digits=10)),
                ('real_winlose', models.DecimalField(decimal_places=6, max_digits=10)),
                ('activity_reward', models.DecimalField(decimal_places=6, max_digits=10)),
                ('returnpoint', models.DecimalField(db_column='returnPoint', decimal_places=6, max_digits=10)),
                ('salary', models.DecimalField(decimal_places=6, max_digits=10)),
                ('salary_sin', models.DecimalField(decimal_places=6, max_digits=10)),
                ('profitnloss', models.DecimalField(db_column='profitNLoss', decimal_places=6, max_digits=10)),
                ('commission', models.DecimalField(decimal_places=6, max_digits=10)),
                ('dividendrate', models.CharField(db_column='dividendRate', max_length=5)),
                ('count', models.IntegerField()),
                ('win', models.IntegerField()),
                ('pay', models.IntegerField()),
                ('pay_total', models.DecimalField(decimal_places=6, max_digits=10)),
                ('withdrawal', models.IntegerField()),
                ('withdrawal_total', models.DecimalField(decimal_places=6, max_digits=10)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_report_ssc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserSalaryLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=255)),
                ('up_user_id', models.IntegerField(blank=True, null=True)),
                ('up_username', models.CharField(blank=True, max_length=255, null=True)),
                ('bet', models.CharField(max_length=20)),
                ('salary', models.CharField(max_length=20)),
                ('receive', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_salary_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserVerifyProxy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_id', models.IntegerField()),
                ('from_username', models.CharField(max_length=60)),
                ('email', models.CharField(max_length=100)),
                ('qq', models.CharField(max_length=40)),
                ('wechat', models.CharField(max_length=40)),
                ('sq_id', models.IntegerField()),
                ('sq_answer', models.CharField(max_length=60)),
                ('user_url', models.CharField(max_length=20)),
                ('area', models.CharField(max_length=6)),
                ('phone', models.CharField(max_length=20)),
                ('note', models.CharField(max_length=200)),
                ('memo', models.CharField(max_length=200)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_verify_proxy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserVipexpLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('before_exp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('def_exp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('after_exp', models.DecimalField(decimal_places=2, max_digits=10)),
                ('note', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_vipexp_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWinlose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=255)),
                ('up_user_id', models.IntegerField(blank=True, null=True)),
                ('up_username', models.CharField(blank=True, max_length=255, null=True)),
                ('game_kinds_id', models.IntegerField()),
                ('game_kinds_skey', models.CharField(max_length=50)),
                ('income', models.CharField(max_length=20)),
                ('outgo', models.CharField(max_length=20)),
                ('bet', models.CharField(max_length=20)),
                ('winlose', models.CharField(max_length=20)),
                ('prize', models.CharField(max_length=20)),
                ('real_winlose', models.CharField(max_length=20)),
                ('activity_reward', models.CharField(max_length=20)),
                ('returnpoint', models.CharField(db_column='returnPoint', max_length=20)),
                ('count', models.IntegerField()),
                ('win', models.IntegerField()),
                ('platform', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_winlose',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWinloseLive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=60)),
                ('up6_id', models.IntegerField()),
                ('up6_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up5_id', models.IntegerField()),
                ('up5_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up4_id', models.IntegerField()),
                ('up4_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up3_id', models.IntegerField()),
                ('up3_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up3_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up3_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_id', models.IntegerField()),
                ('up2_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up1_id', models.IntegerField()),
                ('up1_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up0_id', models.IntegerField()),
                ('up0_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('playkey', models.CharField(max_length=20)),
                ('tablenum', models.CharField(max_length=20)),
                ('list_id', models.CharField(max_length=30)),
                ('income', models.DecimalField(decimal_places=6, max_digits=20)),
                ('outgo', models.DecimalField(decimal_places=6, max_digits=20)),
                ('bet', models.DecimalField(decimal_places=6, max_digits=20)),
                ('betok', models.DecimalField(decimal_places=6, max_digits=20)),
                ('money_ok', models.FloatField()),
                ('wl_ok', models.FloatField()),
                ('wait', models.DecimalField(decimal_places=6, max_digits=20)),
                ('winlose', models.DecimalField(decimal_places=6, max_digits=20)),
                ('prize', models.DecimalField(decimal_places=6, max_digits=20)),
                ('activity_reward', models.DecimalField(decimal_places=6, max_digits=20)),
                ('returnpoint', models.DecimalField(db_column='returnPoint', decimal_places=6, max_digits=20)),
                ('real_winlose', models.DecimalField(decimal_places=6, max_digits=20)),
                ('bmoney', models.DecimalField(decimal_places=6, max_digits=20)),
                ('count', models.IntegerField()),
                ('bcount', models.IntegerField()),
                ('win', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_winlose_live',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWinloseSport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=60)),
                ('gtype', models.CharField(max_length=20)),
                ('gtypes', models.CharField(max_length=20)),
                ('rtype', models.CharField(max_length=30)),
                ('bet', models.DecimalField(decimal_places=6, max_digits=20)),
                ('betok', models.DecimalField(decimal_places=6, max_digits=20)),
                ('wait', models.DecimalField(decimal_places=6, max_digits=20)),
                ('winlose', models.DecimalField(decimal_places=6, max_digits=20)),
                ('prize', models.DecimalField(decimal_places=6, max_digits=20)),
                ('wgold', models.DecimalField(decimal_places=6, max_digits=20)),
                ('result', models.DecimalField(decimal_places=6, max_digits=20)),
                ('count', models.IntegerField()),
                ('win', models.IntegerField()),
                ('up6_id', models.IntegerField()),
                ('up6_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up5_id', models.IntegerField()),
                ('up5_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up4_id', models.IntegerField()),
                ('up4_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up3_id', models.IntegerField()),
                ('up3_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up3_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up3_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_id', models.IntegerField()),
                ('up2_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up1_id', models.IntegerField()),
                ('up1_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('up0_id', models.IntegerField()),
                ('up0_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_upgive', models.DecimalField(decimal_places=6, max_digits=20)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_winlose_sport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserWinloseSsc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_id', models.IntegerField()),
                ('username', models.CharField(max_length=60)),
                ('up6_id', models.IntegerField()),
                ('up6_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_upgive', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('up5_id', models.IntegerField()),
                ('up5_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_upgive', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('up4_id', models.IntegerField()),
                ('up4_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_upgive', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('up3_id', models.IntegerField()),
                ('up3_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up3_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up3_upgive', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('up2_id', models.IntegerField()),
                ('up2_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_upgive', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('up1_id', models.IntegerField()),
                ('up1_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_upgive', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('up0_id', models.IntegerField()),
                ('up0_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_upgive', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('playkey', models.CharField(max_length=20)),
                ('list_id', models.CharField(max_length=30)),
                ('income', models.DecimalField(decimal_places=6, max_digits=20)),
                ('outgo', models.DecimalField(decimal_places=6, max_digits=20)),
                ('bet', models.DecimalField(decimal_places=6, max_digits=20)),
                ('betok', models.DecimalField(decimal_places=6, max_digits=20)),
                ('wait', models.DecimalField(decimal_places=6, max_digits=20)),
                ('winlose', models.DecimalField(decimal_places=6, max_digits=20)),
                ('prize', models.DecimalField(decimal_places=6, max_digits=20)),
                ('activity_reward', models.DecimalField(decimal_places=6, max_digits=20)),
                ('returnpoint', models.DecimalField(db_column='returnPoint', decimal_places=6, max_digits=20)),
                ('real_winlose', models.DecimalField(decimal_places=6, max_digits=20)),
                ('bmoney', models.DecimalField(decimal_places=6, max_digits=20)),
                ('count', models.IntegerField()),
                ('bcount', models.IntegerField()),
                ('win', models.IntegerField()),
                ('pay', models.IntegerField()),
                ('pay_total', models.IntegerField()),
                ('withdrawal', models.IntegerField()),
                ('withdrawal_total', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_winlose_ssc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('needexp', models.IntegerField(db_column='needExp')),
                ('daywithdrawaltimes', models.IntegerField(db_column='dayWithdrawalTimes')),
                ('dayloginfreedartstimes', models.IntegerField(db_column='dayLoginFreeDartsTimes')),
                ('maxdartstimes', models.IntegerField(db_column='maxDartsTimes')),
                ('loginaddscore', models.IntegerField(db_column='loginAddScore')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'vip',
                'managed': False,
            },
        ),
    ]
