# Generated by Django 3.1.7 on 2021-03-16 14:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApikeyListName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apikey', models.CharField(blank=True, db_column='APIKey', max_length=16, null=True, unique=True)),
                ('apiname', models.CharField(blank=True, db_column='APIName', max_length=45, null=True)),
            ],
            options={
                'db_table': 'apikey_list_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CtlLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.PositiveIntegerField()),
                ('type', models.CharField(max_length=30)),
                ('text', models.TextField()),
                ('user', models.CharField(max_length=255)),
                ('status', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'ctl_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameAd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('links', models.CharField(max_length=300)),
                ('img', models.CharField(blank=True, max_length=300, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=45, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_ad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameBjl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gameid', models.CharField(blank=True, max_length=20, null=True)),
                ('period', models.CharField(db_column='Period', max_length=16)),
                ('kl8number', models.CharField(db_column='KL8Number', max_length=80)),
                ('setnumber', models.CharField(db_column='SetNumber', max_length=80)),
                ('pokerpoint', models.CharField(db_column='PokerPoint', max_length=45)),
                ('before', models.TextField(db_column='Before')),
                ('after', models.TextField(db_column='After')),
                ('status', models.IntegerField()),
                ('lottime', models.DateTimeField(blank=True, db_column='LotTime', null=True)),
            ],
            options={
                'db_table': 'game_bjl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameBuylist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyid', models.CharField(max_length=45)),
                ('betlogid', models.PositiveIntegerField(db_column='BetLogID')),
                ('errorcode', models.IntegerField(db_column='ErrorCode')),
                ('errormsg', models.CharField(db_column='ErrorMsg', max_length=250)),
                ('errorcodep', models.IntegerField(db_column='ErrorCodeP')),
                ('errormsgp', models.CharField(db_column='ErrorMsgP', max_length=250)),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=40, null=True)),
                ('location', models.IntegerField()),
                ('code', models.CharField(blank=True, max_length=20, null=True)),
                ('playkey', models.CharField(blank=True, max_length=20, null=True)),
                ('list_id', models.CharField(blank=True, max_length=30, null=True)),
                ('period', models.CharField(blank=True, max_length=30, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('nums', models.IntegerField(blank=True, null=True)),
                ('times', models.DecimalField(decimal_places=2, max_digits=13)),
                ('pri_mode', models.CharField(blank=True, max_length=8, null=True)),
                ('pri_number', models.CharField(blank=True, max_length=65, null=True)),
                ('modes', models.CharField(blank=True, max_length=12, null=True)),
                ('modetype', models.CharField(blank=True, db_column='ModeType', max_length=6, null=True)),
                ('prize_date', models.IntegerField()),
                ('pri_money', models.CharField(blank=True, max_length=16, null=True)),
                ('money', models.CharField(blank=True, max_length=20, null=True)),
                ('super_money', models.CharField(blank=True, max_length=16, null=True)),
                ('super_status', models.IntegerField(blank=True, null=True)),
                ('is_zuih', models.CharField(blank=True, max_length=5, null=True)),
                ('is_succeed', models.CharField(blank=True, max_length=5, null=True)),
                ('is_ok', models.CharField(blank=True, max_length=5, null=True)),
                ('is_zuih_pri_stop', models.SmallIntegerField(blank=True, null=True)),
                ('z_number', models.CharField(blank=True, max_length=10, null=True)),
                ('prizenum', models.CharField(blank=True, max_length=3, null=True)),
                ('prize_time', models.DateTimeField(blank=True, null=True)),
                ('isprize', models.CharField(blank=True, max_length=12, null=True)),
                ('pri_other', models.CharField(blank=True, max_length=16, null=True)),
                ('rebate_buy', models.CharField(blank=True, max_length=5, null=True)),
                ('rebate_last_num', models.CharField(blank=True, max_length=5, null=True)),
                ('rebate_list', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('lottery_rate', models.CharField(max_length=15)),
                ('gstatus', models.SmallIntegerField(blank=True, db_column='gStatus', null=True)),
                ('msystem', models.CharField(db_column='mSystem', max_length=30)),
                ('score', models.IntegerField()),
                ('selfpoint', models.CharField(blank=True, max_length=20, null=True)),
                ('experience', models.CharField(max_length=1)),
                ('sys_mode', models.CharField(max_length=8)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('z_notopen', models.CharField(blank=True, max_length=8, null=True)),
                ('field_is_latest_rate', models.CharField(db_column='\x08is_latest_rate', max_length=1)),
                ('z_buy_rate', models.CharField(blank=True, max_length=60, null=True)),
                ('buy_rate', models.CharField(max_length=20)),
                ('z_set_num', models.TextField()),
                ('handicaps', models.CharField(max_length=1)),
                ('currency', models.CharField(blank=True, max_length=5, null=True)),
                ('currency_diff', models.CharField(blank=True, max_length=10, null=True)),
                ('afterpoints', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_id', models.IntegerField()),
                ('up6_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up6_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up6_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_id', models.IntegerField()),
                ('up5_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up5_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up5_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_id', models.IntegerField()),
                ('up4_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up4_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up4_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up3_id', models.IntegerField()),
                ('up3_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up3_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up3_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_id', models.IntegerField()),
                ('up2_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up2_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up2_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_id', models.IntegerField()),
                ('up1_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up1_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up1_result', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_id', models.IntegerField()),
                ('up0_wl', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_war', models.DecimalField(decimal_places=2, max_digits=5)),
                ('up0_wgold', models.DecimalField(decimal_places=6, max_digits=15)),
                ('up0_result', models.DecimalField(decimal_places=6, max_digits=15)),
            ],
            options={
                'db_table': 'game_buylist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameBuytemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('buyid', models.CharField(blank=True, max_length=45, null=True, unique=True)),
                ('list_id', models.CharField(blank=True, max_length=30, null=True)),
                ('money', models.CharField(blank=True, max_length=30, null=True)),
                ('gametype', models.CharField(blank=True, db_column='GameType', max_length=45, null=True)),
                ('betpointst', models.CharField(blank=True, db_column='BetPointst', max_length=30, null=True)),
                ('commrate', models.CharField(blank=True, db_column='CommRate', max_length=30, null=True)),
                ('moneymode', models.CharField(blank=True, db_column='MoneyMode', max_length=20, null=True)),
                ('note', models.TextField(blank=True, db_column='Note', null=True)),
                ('betcontent', models.TextField(blank=True, db_column='BetContent', null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_buytemp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=60, null=True)),
                ('fullname_tw', models.CharField(blank=True, max_length=60, null=True)),
                ('ckey', models.CharField(blank=True, max_length=30, null=True)),
                ('cate', models.CharField(blank=True, max_length=30, null=True)),
                ('codelist', models.CharField(blank=True, max_length=400, null=True)),
                ('mode', models.CharField(blank=True, max_length=8, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameCodeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codekey', models.CharField(blank=True, db_column='CodeKey', max_length=20, null=True)),
                ('listkey', models.CharField(blank=True, db_column='ListKey', max_length=20, null=True)),
                ('showtile', models.CharField(blank=True, db_column='ShowTile', max_length=30, null=True)),
                ('codetile', models.CharField(blank=True, db_column='CodeTile', max_length=30, null=True)),
                ('showtile_tw', models.CharField(blank=True, db_column='ShowTile_tw', max_length=30, null=True)),
                ('codetile_tw', models.CharField(blank=True, db_column='CodeTile_tw', max_length=30, null=True)),
                ('orders', models.SmallIntegerField(blank=True, db_column='OrderS', null=True)),
                ('rebate', models.CharField(blank=True, db_column='Rebate', max_length=8, null=True)),
                ('maxnote', models.CharField(blank=True, db_column='MaxNote', max_length=8, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('apikey', models.CharField(blank=True, db_column='APIKey', max_length=16, null=True)),
                ('apikey2', models.CharField(blank=True, db_column='APIKey2', max_length=16, null=True)),
            ],
            options={
                'db_table': 'game_code_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameDelay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week', models.IntegerField()),
                ('playkey', models.CharField(max_length=30)),
                ('hasweek', models.CharField(max_length=15)),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_delay',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameDtmode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playkey', models.CharField(blank=True, max_length=45, null=True)),
                ('skey', models.CharField(blank=True, max_length=45, null=True)),
                ('limitnums', models.IntegerField()),
                ('limitmoney', models.CharField(max_length=16)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_dtmode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameJumpSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playkey', models.CharField(max_length=45)),
                ('codekey', models.CharField(max_length=45)),
                ('listkey', models.CharField(max_length=45)),
                ('buycount', models.IntegerField()),
                ('pluscount', models.IntegerField()),
                ('jumpsetnum', models.CharField(max_length=11)),
                ('nopensetnum', models.CharField(max_length=11)),
                ('linktime', models.IntegerField()),
                ('buydownmax', models.IntegerField()),
                ('linkdownmax', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_jump_setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameKinds',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('skey', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('title_tw', models.CharField(blank=True, max_length=255, null=True)),
                ('change_rate', models.FloatField()),
                ('returns', models.IntegerField(db_column='returnS')),
                ('extra', models.IntegerField()),
                ('enable', models.IntegerField()),
                ('rp_alter', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_kinds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLimitLhc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playkey', models.CharField(max_length=20)),
                ('codeid', models.CharField(max_length=20)),
                ('playid', models.CharField(max_length=30)),
                ('limitnum', models.TextField()),
                ('limitrate', models.CharField(max_length=20)),
                ('limitperiod', models.CharField(max_length=20)),
                ('limittype', models.IntegerField()),
                ('limithandicaps', models.CharField(max_length=10)),
                ('limitstatus', models.IntegerField()),
            ],
            options={
                'db_table': 'game_limit_lhc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLimitPk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_id', models.CharField(blank=True, max_length=30, null=True)),
                ('limitnums', models.IntegerField(blank=True, db_column='limitNums', null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_limit_pk',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLimitSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('limitmoney', models.CharField(blank=True, db_column='limitMoney', max_length=16, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_limit_setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLimitTimes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forgames', models.CharField(blank=True, db_column='ForGames', max_length=20, null=True)),
                ('forplays', models.CharField(blank=True, db_column='ForPlays', max_length=20, null=True)),
                ('forusers', models.CharField(blank=True, db_column='ForUsers', max_length=10, null=True)),
                ('forrange', models.SmallIntegerField(blank=True, db_column='ForRange', null=True)),
                ('number', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_limit_times',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLimitUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('playkey', models.CharField(max_length=8)),
                ('codekey', models.CharField(max_length=20)),
                ('choose', models.IntegerField()),
                ('sin_per', models.IntegerField()),
                ('sin_zhu', models.IntegerField()),
                ('status', models.IntegerField()),
                ('updated_user', models.CharField(max_length=30)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_limit_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLottery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('playkey', models.CharField(blank=True, db_column='playKey', max_length=10, null=True)),
                ('serialid', models.CharField(blank=True, db_column='SerialID', max_length=6, null=True)),
                ('serialdate', models.CharField(blank=True, db_column='SerialDate', max_length=10, null=True)),
                ('period', models.CharField(blank=True, max_length=16, null=True)),
                ('number', models.CharField(blank=True, db_column='Number', max_length=200, null=True)),
                ('lottime', models.DateTimeField(blank=True, db_column='LotTime', null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('wrongcheck', models.IntegerField()),
                ('keyinuser', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'game_lottery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLotteryStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playkey', models.CharField(blank=True, db_column='playKey', max_length=16, null=True)),
                ('fullname', models.CharField(blank=True, max_length=16, null=True)),
                ('lastperiod', models.CharField(blank=True, db_column='LastPeriod', max_length=16, null=True)),
                ('lastnumber', models.CharField(blank=True, db_column='LastNumber', max_length=200, null=True)),
                ('lottime', models.DateTimeField(blank=True, db_column='LotTime', null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('failtime', models.IntegerField(blank=True, null=True)),
                ('modes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_lottery_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameLotteryTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('playkey', models.CharField(blank=True, db_column='playKey', max_length=10, null=True)),
                ('serialid', models.CharField(blank=True, db_column='SerialID', max_length=6, null=True)),
                ('serialdate', models.CharField(blank=True, db_column='SerialDate', max_length=10, null=True)),
                ('period', models.CharField(blank=True, max_length=16, null=True)),
                ('number', models.CharField(blank=True, db_column='Number', max_length=200, null=True)),
                ('lottime', models.DateTimeField(blank=True, db_column='LotTime', null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('gamename', models.CharField(blank=True, db_column='GameName', max_length=30, null=True)),
            ],
            options={
                'db_table': 'game_lottery_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playkey', models.CharField(blank=True, db_column='playKey', max_length=10, null=True)),
                ('ckey', models.CharField(blank=True, max_length=60, null=True)),
                ('choose', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=120, null=True)),
                ('mintimes', models.DecimalField(db_column='Mintimes', decimal_places=2, max_digits=4)),
                ('times_1700', models.IntegerField(blank=True, db_column='Times_1700', null=True)),
                ('times_a', models.IntegerField(db_column='Times_A')),
                ('times_b', models.IntegerField(db_column='Times_B')),
                ('times_c', models.IntegerField(db_column='Times_C')),
                ('times_d', models.IntegerField(db_column='Times_D')),
                ('prize_1700', models.CharField(blank=True, db_column='Prize_1700', max_length=80, null=True)),
                ('prize_a', models.CharField(db_column='Prize_A', max_length=80)),
                ('prize_b', models.CharField(db_column='Prize_B', max_length=80)),
                ('prize_c', models.CharField(db_column='Prize_C', max_length=80)),
                ('prize_d', models.CharField(db_column='Prize_D', max_length=80)),
                ('per_1700', models.IntegerField(db_column='Per_1700')),
                ('per_a', models.IntegerField(db_column='Per_A')),
                ('per_b', models.IntegerField(db_column='Per_B')),
                ('per_c', models.IntegerField(db_column='Per_C')),
                ('per_d', models.IntegerField(db_column='Per_D')),
                ('pernums_1700', models.IntegerField(db_column='Pernums_1700')),
                ('pernums_a', models.IntegerField(db_column='Pernums_A')),
                ('pernums_b', models.IntegerField(db_column='Pernums_B')),
                ('pernums_c', models.IntegerField(db_column='Pernums_C')),
                ('pernums_d', models.IntegerField(db_column='Pernums_D')),
                ('perall_1700', models.FloatField(db_column='Perall_1700')),
                ('perall_a', models.FloatField(db_column='Perall_A')),
                ('perall_b', models.FloatField(db_column='Perall_B')),
                ('perall_c', models.FloatField(db_column='Perall_C')),
                ('perall_d', models.FloatField(db_column='Perall_D')),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_set',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameSscList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=60, null=True)),
                ('ckey', models.CharField(blank=True, max_length=30, null=True)),
                ('skey', models.CharField(blank=True, max_length=60, null=True)),
                ('code', models.CharField(blank=True, max_length=30, null=True)),
                ('cate', models.CharField(blank=True, max_length=30, null=True)),
                ('content', models.CharField(blank=True, max_length=300, null=True)),
                ('example', models.TextField(blank=True, null=True)),
                ('help', models.TextField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('shownum', models.IntegerField(blank=True, null=True)),
                ('minnum', models.IntegerField(blank=True, null=True)),
                ('maxnum', models.IntegerField(blank=True, null=True)),
                ('show_key', models.CharField(blank=True, max_length=600, null=True)),
                ('show_other', models.CharField(blank=True, max_length=600, null=True)),
                ('max_select', models.IntegerField(blank=True, null=True)),
                ('min_select', models.IntegerField(blank=True, null=True)),
                ('is_yes', models.CharField(blank=True, max_length=6, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('ball_type', models.CharField(blank=True, max_length=20, null=True)),
                ('fullname_tw', models.CharField(blank=True, max_length=60, null=True)),
                ('code_tw', models.CharField(blank=True, max_length=30, null=True)),
                ('cate_tw', models.CharField(blank=True, max_length=30, null=True)),
                ('content_tw', models.CharField(blank=True, max_length=300, null=True)),
                ('example_tw', models.TextField(blank=True, null=True)),
                ('help_tw', models.TextField(blank=True, null=True)),
                ('title_tw', models.CharField(blank=True, max_length=150, null=True)),
                ('show_key_tw', models.CharField(blank=True, max_length=600, null=True)),
                ('show_other_tw', models.CharField(blank=True, max_length=600, null=True)),
            ],
            options={
                'db_table': 'game_ssc_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameSscSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_id', models.CharField(max_length=20, unique=True)),
                ('maxdouble', models.IntegerField()),
                ('fs', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'game_ssc_set',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playkey', models.CharField(blank=True, db_column='playKey', max_length=12, null=True)),
                ('lotnum', models.CharField(blank=True, db_column='lotNum', max_length=6, null=True)),
                ('begintime', models.TimeField(blank=True, db_column='beginTime', null=True)),
                ('endtime', models.TimeField(blank=True, db_column='endTime', null=True)),
                ('lottime', models.TimeField(blank=True, db_column='lotTime', null=True)),
                ('useweek', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_time',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=90, null=True)),
                ('fullname_tw', models.CharField(blank=True, max_length=90, null=True)),
                ('ckey', models.CharField(blank=True, max_length=30, null=True)),
                ('cate', models.CharField(blank=True, max_length=30, null=True)),
                ('skey', models.CharField(blank=True, max_length=30, null=True)),
                ('code', models.CharField(blank=True, max_length=300, null=True)),
                ('codea', models.CharField(blank=True, db_column='codeA', max_length=300, null=True)),
                ('codeb', models.CharField(blank=True, db_column='codeB', max_length=300, null=True)),
                ('codec', models.CharField(blank=True, db_column='codeC', max_length=300, null=True)),
                ('coded', models.CharField(blank=True, db_column='codeD', max_length=300, null=True)),
                ('firstcode', models.CharField(blank=True, max_length=16, null=True)),
                ('orders', models.CharField(blank=True, max_length=10, null=True)),
                ('qishu', models.CharField(blank=True, max_length=4, null=True)),
                ('lot_date', models.CharField(blank=True, max_length=30, null=True)),
                ('lot_num', models.CharField(blank=True, max_length=16, null=True)),
                ('lot_begin', models.CharField(blank=True, max_length=10, null=True)),
                ('lot_end', models.CharField(blank=True, max_length=10, null=True)),
                ('type_group', models.CharField(blank=True, max_length=10, null=True)),
                ('list_group', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.IntegerField()),
                ('statusa', models.IntegerField(db_column='statusA')),
                ('statusb', models.IntegerField(db_column='statusB')),
                ('statusc', models.IntegerField(db_column='statusC')),
                ('statusd', models.IntegerField(db_column='statusD')),
                ('testline', models.IntegerField()),
                ('bet', models.IntegerField()),
                ('versions', models.CharField(max_length=1)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('procode', models.CharField(blank=True, max_length=300, null=True)),
                ('useweek', models.CharField(max_length=20)),
                ('showstatus', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'game_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameTypeAg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(blank=True, max_length=30, null=True)),
                ('user_id', models.IntegerField()),
                ('higher_id', models.IntegerField()),
                ('proxy', models.IntegerField()),
                ('playkey', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.IntegerField()),
                ('update_user', models.CharField(blank=True, max_length=45, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'game_type_ag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GameVirprizeRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=40)),
                ('fullname', models.CharField(max_length=40)),
                ('pri_money', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'game_virprize_rank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveGiftlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_id', models.CharField(max_length=10)),
                ('buyid', models.CharField(blank=True, max_length=30, null=True)),
                ('playkey', models.CharField(max_length=20)),
                ('list_id', models.CharField(max_length=30)),
                ('user_id', models.IntegerField()),
                ('up6_id', models.IntegerField()),
                ('up5_id', models.IntegerField()),
                ('up4_id', models.IntegerField()),
                ('up3_id', models.IntegerField()),
                ('up2_id', models.IntegerField()),
                ('up1_id', models.IntegerField()),
                ('up0_id', models.IntegerField()),
                ('camgirl_id', models.IntegerField()),
                ('money', models.CharField(max_length=20)),
                ('afterpoints', models.DecimalField(decimal_places=6, max_digits=15)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'live_giftlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LiveSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('playkey', models.CharField(max_length=20)),
                ('camgirl_id', models.IntegerField()),
                ('hours', models.IntegerField()),
                ('status', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'live_schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.PositiveIntegerField()),
                ('type', models.CharField(max_length=30)),
                ('text', models.TextField()),
                ('user', models.CharField(max_length=255)),
                ('status', models.SmallIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PoolLog',
            fields=[
                ('period', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('income', models.FloatField()),
                ('pay', models.FloatField()),
                ('profit', models.FloatField()),
                ('money', models.FloatField()),
                ('proc', models.FloatField()),
                ('status', models.SmallIntegerField()),
                ('playkey', models.CharField(db_column='playKey', max_length=10)),
            ],
            options={
                'db_table': 'pool_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PoolSetting',
            fields=[
                ('proctype', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('money', models.FloatField()),
                ('playkey', models.CharField(db_column='playKey', max_length=255)),
            ],
            options={
                'db_table': 'pool_setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PrizeTop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(blank=True, null=True)),
                ('top_max_num', models.IntegerField(blank=True, null=True)),
                ('top_max_money', models.CharField(blank=True, max_length=8, null=True)),
                ('top_limit_time', models.IntegerField(blank=True, null=True)),
                ('is_open_virtual', models.IntegerField(blank=True, null=True)),
                ('top_vir_min', models.CharField(blank=True, max_length=8, null=True)),
                ('top_vir_max', models.CharField(blank=True, max_length=8, null=True)),
                ('top_vir_game', models.CharField(blank=True, max_length=100, null=True)),
                ('top_vir_nick', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prize_top',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchedLongcount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('playkey', models.CharField(max_length=10)),
                ('list', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sched_longcount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Super',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'super',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuperLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('content', models.CharField(max_length=2000)),
                ('beforetotal', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('income', models.DecimalField(decimal_places=2, max_digits=20)),
                ('outlay', models.DecimalField(decimal_places=2, max_digits=20)),
                ('aftertotal', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.SmallIntegerField()),
                ('super_status', models.SmallIntegerField(blank=True, null=True)),
                ('super_betmin', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'super_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuperSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bet', models.IntegerField(unique=True)),
                ('perent', models.IntegerField()),
            ],
            options={
                'db_table': 'super_set',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuperUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=20)),
                ('betmin', models.IntegerField()),
                ('num', models.IntegerField()),
                ('content', models.CharField(max_length=2000)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'super_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mingetcash_amount', models.IntegerField(blank=True, db_column='MinGetCash_amount', null=True)),
                ('maxgetcash_num', models.IntegerField(blank=True, db_column='MaxGetCash_num', null=True)),
                ('modes_putcash', models.IntegerField(blank=True, db_column='modes_PutCash', null=True)),
                ('modes_gifts', models.IntegerField(blank=True, null=True)),
                ('modes_gifts_money', models.CharField(blank=True, max_length=20, null=True)),
                ('minputcash_amount', models.CharField(blank=True, db_column='MinPutCash_amount', max_length=30, null=True)),
                ('minputcash_ren', models.CharField(blank=True, db_column='MinPutCash_ren', max_length=30, null=True)),
                ('getfee_single', models.CharField(blank=True, db_column='GetFee_Single', max_length=48, null=True)),
                ('getfee_single_rate', models.CharField(blank=True, db_column='GetFee_Single_Rate', max_length=18, null=True)),
                ('modes_rebate', models.CharField(blank=True, db_column='Modes_Rebate', max_length=30, null=True)),
                ('mention', models.CharField(blank=True, max_length=30, null=True)),
                ('maxbonus', models.CharField(blank=True, db_column='MaxBonus', max_length=30, null=True)),
                ('minbonus', models.CharField(blank=True, db_column='MinBonus', max_length=30, null=True)),
                ('limit_betting', models.CharField(blank=True, db_column='Limit_Betting', max_length=8, null=True)),
                ('auto_jies_begin', models.CharField(blank=True, db_column='Auto_JieS_Begin', max_length=30, null=True)),
                ('auto_jies_end', models.CharField(blank=True, db_column='Auto_JieS_End', max_length=30, null=True)),
                ('del_member_date', models.IntegerField(blank=True, db_column='Del_Member_date', null=True)),
                ('modes', models.CharField(blank=True, db_column='Modes', max_length=90, null=True)),
                ('remodes', models.CharField(blank=True, db_column='Remodes', max_length=6, null=True)),
                ('fixedmodes', models.CharField(blank=True, db_column='FixedModes', max_length=5, null=True)),
                ('automodes', models.CharField(blank=True, db_column='AutoModes', max_length=5, null=True)),
                ('maxbank', models.CharField(blank=True, db_column='MaxBank', max_length=2, null=True)),
                ('minmodejiao', models.CharField(blank=True, db_column='MinModeJiao', max_length=5, null=True)),
                ('minmodefen', models.CharField(blank=True, db_column='MinModeFen', max_length=5, null=True)),
                ('isangle', models.CharField(blank=True, db_column='IsAngle', max_length=15, null=True)),
                ('ispoint', models.CharField(blank=True, db_column='IsPoint', max_length=15, null=True)),
                ('ischase', models.CharField(blank=True, db_column='IsChase', max_length=15, null=True)),
                ('ischargeforhig', models.CharField(blank=True, db_column='IsChargeForHig', max_length=5, null=True)),
                ('issendmsg', models.CharField(blank=True, db_column='IsSendMsg', max_length=5, null=True)),
                ('ispritop', models.CharField(blank=True, db_column='IsPriTop', max_length=5, null=True)),
                ('maxprobonus', models.CharField(blank=True, db_column='MaxProBonus', max_length=5, null=True)),
                ('recommend', models.CharField(blank=True, db_column='Recommend', max_length=10, null=True)),
                ('serviceurl', models.CharField(blank=True, db_column='ServiceUrl', max_length=120, null=True)),
                ('accquo', models.CharField(blank=True, db_column='AccQuo', max_length=5, null=True)),
                ('onlines', models.CharField(blank=True, db_column='OnLines', max_length=4, null=True)),
                ('basicmodes', models.CharField(db_column='basicModes', max_length=5)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=15)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'text',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('password', models.CharField(max_length=40)),
                ('bankname', models.CharField(blank=True, max_length=30, null=True)),
                ('banknum', models.CharField(blank=True, max_length=30, null=True)),
                ('get_amount_num', models.IntegerField(blank=True, null=True)),
                ('get_amount_date', models.DateField(blank=True, null=True)),
                ('golds', models.CharField(blank=True, max_length=20, null=True)),
                ('amount', models.CharField(blank=True, max_length=20, null=True)),
                ('hig_amount', models.CharField(blank=True, max_length=20, null=True)),
                ('low_amount', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserBankLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('accountid', models.CharField(blank=True, max_length=30, null=True)),
                ('floatid', models.CharField(blank=True, max_length=60, null=True)),
                ('errorcode', models.IntegerField(db_column='ErrorCode')),
                ('errormsg', models.CharField(db_column='ErrorMsg', max_length=250)),
                ('errorcodep', models.IntegerField(db_column='ErrorCodeP')),
                ('errormsgp', models.TextField(db_column='ErrorMsgP')),
                ('cate', models.CharField(blank=True, max_length=26, null=True)),
                ('moneys', models.CharField(blank=True, max_length=16, null=True)),
                ('amount', models.CharField(blank=True, max_length=30, null=True)),
                ('hig_amount', models.CharField(blank=True, max_length=30, null=True)),
                ('low_amount', models.CharField(blank=True, max_length=30, null=True)),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('playkey', models.CharField(blank=True, max_length=20, null=True)),
                ('modes', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_bank_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRebate',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('userid', models.PositiveIntegerField()),
                ('playkey', models.CharField(blank=True, db_column='PlayKey', max_length=30, null=True)),
                ('itemkey', models.CharField(blank=True, db_column='ItemKey', max_length=6, null=True)),
                ('modes', models.BigIntegerField(db_column='Modes')),
                ('number', models.FloatField()),
            ],
            options={
                'db_table': 'user_rebate',
                'managed': False,
            },
        ),
    ]
